// Дано трехзначное число. Вывести число, полученное при перестановке цифр
// сотен и десятков исходного числа (например, 123 перейдет в 213).
 
// let num = 123;

// // преобразуем число в строку
// let numStr = num.toString();

// // проверяем, что введено трехзначное число
// if (numStr.length == 3) {
//   // переставляем цифры
//   let reversedNum = numStr[1] + numStr[0] + numStr[2];
//   console.log("Переставленное число: " + reversedNum);
// } else {
//   console.log("Вы ввели не трехзначное число!");
// }


// Даны две переменные целого типа: A и B. Если их значения не равны, то
// присвоить каждой переменной сумму этих значений, а если равны, то
// присвоить переменным нулевые значения. Вывести новые значения
// переменных A и B.

// let A = 5;
// let B = 7;
// if (A!==B){
//   A = A + B;
//   B = A;
// }
// else {
//   A=B;
//   B=A;
// }
// console.log(A);
// console.log(B);


// Дан номер года (положительное целое число). Определить количество дней в
// этом году, учитывая, что обычный год насчитывает 365 дней, а високосный —
// 366 дней. Високосным считается год, делящийся на 4, за исключением тех
// годов, которые делятся на 100 и не делятся на 400 (например, годы 300, 1300 и
// 1900 не являются високосными, а 1200 и 2000 — являются).
// let year = 2020;
// let days = 0;

// if ((year % 4 == 0 && year % 100 != 0) || year % 400 == 0) {
//   days = 366;
// } else {
//   days = 365;
// }

// console.log(`Количество дней в году ${year}: ${days}`);

// Дано целое число N (> 0). Найти квадрат данного числа, используя для его
// вычисления следующую формулу: N^2 = 1+3+5+...+(2*N-1)

// let N = 5;
// let sum = 0;

// for (let i = 1; i <= 2 * N - 1; i += 2) {
//   sum += i;
// }

// let square = sum;

// console.log(`Квадрат числа ${N}: ${square}`);

// Даны целые положительные числа N и K. Найти сумму
// let a = 7 
// let b = 5
// console.log(a+b)

// Дан массив A размера N. Найти минимальный элемент из его элементов с
// четными номерами: A2, A4, A6, . . . .

// const A = [3, 1, 4, 1, 5, 9, 2, 6, 5, 3];
// let minEvenNumber = null;
// for (let i = 0; i < A.length; i += 2) {
//   if (minEvenNumber === null || A[i] < minEvenNumber) {
//     minEvenNumber = A[i];
//   }
// }
// console.log(minEvenNumber); 

// Дан массив размера N. Найти два соседних элемента, сумма которых
// максимальна, и вывести эти элементы в порядке возрастания их индексов

// let A = [3, 1, 4, 1, 5, 9, 2, 6, 5, 3];
// let max_sum = Number.MIN_VALUE;
// let max_i, max_j;

// for (let i = 0; i < A.length - 1; i++) {
//   for (let j = i + 1; j < A.length; j++) {
//     let sum = A[i] + A[j];
//     if (sum > max_sum) {
//       max_sum = sum;
//       max_i = i;
//       max_j = j;
//     }
//   }
// }

// console.log([A[max_i], A[max_j]]); 

// Дан массив размера N. Осуществить циклический сдвиг элементов массива
// вправо на одну позицию (при этом A1 перейдет в A2, A2 — в A3, . . ., AN — в
// A1).

// const A = [1, 2, 3, 4, 5];
// const lastElement = A[A.length - 1];
// for (let i = A.length - 1; i >= 1; i--) {
//   A[i] = A[i - 1];
// }
// A[0] = lastElement;

// console.log(A);


// Дан массив размера N. Перед каждым положительным элементом массива
// вставить элемент с нулевым значением.

// const A = [1, 2, -3, 4, 5, -6, 7, -8, 9];
// for (let i = 0; i < A.length; i++) {
//   if (A[i] > 0) {
//     A.splice(i, 0, 0);
//     i++;
//   }
// }
// console.log(A); 

// 11.Дана строка, содержащая по крайней мере один символ пробела. Вывести
// подстроку, расположенную между первым и вторым пробелом исходной строки.
// Если строка содержит только один пробел, то вывести пустую строку.

// const str = 'Sigma Software University';
// let substring = '';
// const firstSpaceIndex = str.indexOf(' ');
// if (firstSpaceIndex !== -1) {
//   const secondSpaceIndex = str.indexOf(' ', firstSpaceIndex + 1);
//   if (secondSpaceIndex !== -1) {
//     substring = str.substring(firstSpaceIndex + 1, secondSpaceIndex);
//   }
// }

// console.log(substring);

// Вычислить стоимость покупки с учетом скидки. Скидка 5%
// предоставляется, если сумма покупки превышает 500 гривен и 10%, если
// больше 1000 гривен.

// let totalCost = null;

// if (purchaseCost > 1000) {
//   totalCost = purchaseCost * 0.9;
// }

// else if (purchaseCost > 500) {
//   totalCost = purchaseCost * 0.95;
// }

// else {
//   totalCost = purchaseCost;
// }

// console.log('Стоимость покупки c учетом скидки:', totalCost);
